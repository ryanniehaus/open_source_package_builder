.TH "gdal_grid" 1 "14 Mar 2008" "GDAL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gdal_grid \- gdal_grid
creates regular grid from the scattered data
.SH "SYNOPSIS"
.PP
.PP
.nf

Usage: gdal_grid [--help-general] [--formats]
    [-ot {Byte/Int16/UInt16/UInt32/Int32/Float32/Float64/
          CInt16/CInt32/CFloat32/CFloat64}]
    [-of format] [-co "NAME=VALUE"]
    [-a_srs srs_def]
    [-l layername]* [-where expression] [-sql select_statement]
    [-txe xmin xmax] [-tye ymin ymax] [-outsize xsize ysize]
    [-a algorithm[:parameter1=value1]*]    [-quiet]
    <src_datasource> <dst_filename>
.fi
.PP
.SH "DESCRIPTION"
.PP
This program creates regular grid (raster) from the scattered data read from the OGR datasource. Input data will be interpolated to fill grid nodes with values, you can choose from various interpolation methods.
.PP
.IP "\fB\fB-ot\fP \fItype\fP:\fP" 1c
For the output bands to be of the indicated data type. 
.IP "\fB\fB-of\fP \fIformat\fP:\fP" 1c
Select the output format. The default is GeoTIFF (GTiff). Use the short format name. 
.IP "\fB\fB-txe\fP \fIxmin xmax\fP:\fP" 1c
Set georeferenced X extents of output file to be created. 
.IP "\fB\fB-tye\fP \fIymin ymax\fP:\fP" 1c
Set georeferenced Y extents of output file to be created. 
.IP "\fB\fB-outsize\fP \fIxsize ysize\fP:\fP" 1c
Set the size of the output file in pixels and lines. 
.IP "\fB\fB-a_srs\fP \fIsrs_def\fP:\fP" 1c
Override the projection for the output file. The \fIsrs_def\fP may be any of the usual GDAL/OGR forms, complete WKT, PROJ.4, EPSG:n or a file containing the WKT.  
.IP "\fB\fB-a\fP \fI[algorithm[:parameter1=value1][:parameter2=value2]...]\fP: \fP" 1c
Set the interpolation algorithm name and (optionally) its parameters. See \fBINTERPOLATION ALGORITHMS\fP section for discussion of available options. 
.IP "\fB\fB-l\fP \fIlayername\fP: \fP" 1c
Indicates the layer(s) from the datasource that will be used for input features. May be specified multiple times, but at least one layer name or a -sql option must be specified. 
.IP "\fB\fB-where\fP \fIexpression\fP: \fP" 1c
An optional SQL WHERE style query expression to be applied to select features to burn in from the input layer(s).  
.IP "\fB\fB-sql\fP \fIselect_statement\fP: \fP" 1c
An SQL statement to be evaluated against the datasource to produce a virtual layer of features to be burned in. 
.IP "\fB\fB-co\fP \fI'NAME=VALUE'\fP:\fP" 1c
Passes a creation option to the output format driver. Multiple \fB-co\fP options may be listed. See format specific documentation for legal creation options for each format. 
.IP "\fB\fB-quiet\fP:\fP" 1c
Suppress progress monitor and other non-error output. 
.IP "\fB\fIsrc_datasource\fP: \fP" 1c
Any OGR supported readable datasource. 
.IP "\fB\fIdst_filename\fP: \fP" 1c
The GDAL supported output file.
.PP
.PP
.SH "INTERPOLATION ALGORITHMS"
.PP
There are number of interpolation algorithms to choose from.
.PP
.IP "\fB\fIinvdist\fP: \fP" 1c
Inverse distance to a power. This is default algorithm. It has following parameters:
.PP
.IP "\fB\fIpower\fP: \fP" 1c
Weighting power (default 2.0). 
.IP "\fB\fIsmoothing\fP: \fP" 1c
Smoothing parameter (default 0.0). 
.IP "\fB\fIradius1\fP: \fP" 1c
The first radius (X axis if rotation angle is 0) of search ellipse. Set this parameter to zero to use whole point array. Default is 0.0. 
.IP "\fB\fIradius2\fP: \fP" 1c
The second radius (Y axis if rotation angle is 0) of search ellipse. Set this parameter to zero to use whole point array. Default is 0.0. 
.IP "\fB\fIangle\fP: \fP" 1c
Angle of search ellipse rotation in degrees (counter clockwise, default 0.0). 
.IP "\fB\fImax_points\fP: \fP" 1c
Maximum number of data points to use. Do not search for more points than this number. This is only used if search ellipse is set (both radiuses are non-zero). Zero means that all found points should be used. Default is 0. 
.IP "\fB\fImin_points\fP: \fP" 1c
Minimum number of data points to use. If less amount of points found the grid node considered empty and will be filled with NODATA marker. This is only used if search ellipse is set (both radiuses are non-zero). Default is 0. 
.IP "\fB\fInodata\fP: \fP" 1c
NODATA marker to fill empty points (default 0.0). 
.PP
.PP
.IP "\fB\fIaverage\fP: \fP" 1c
Moving average algorithm. It has following parameters:
.PP
.IP "\fB\fIradius1\fP: \fP" 1c
The first radius (X axis if rotation angle is 0) of search ellipse. Set this parameter to zero to use whole point array. Default is 0.0. 
.IP "\fB\fIradius2\fP: \fP" 1c
The second radius (Y axis if rotation angle is 0) of search ellipse. Set this parameter to zero to use whole point array. Default is 0.0. 
.IP "\fB\fIangle\fP: \fP" 1c
Angle of search ellipse rotation in degrees (counter clockwise, default 0.0). 
.IP "\fB\fImin_points\fP: \fP" 1c
Minimum number of data points to use. If less amount of points found the grid node considered empty and will be filled with NODATA marker. Default is 0. 
.IP "\fB\fInodata\fP: \fP" 1c
NODATA marker to fill empty points (default 0.0). 
.PP
.PP
Note, that it is essential to set search ellipse for moving average method. It is a window that will be averaged when computing grid nodes values.
.PP
.IP "\fB\fInearest\fP: \fP" 1c
Moving average algorithm. It has following parameters:
.PP
.IP "\fB\fIradius1\fP: \fP" 1c
The first radius (X axis if rotation angle is 0) of search ellipse. Set this parameter to zero to use whole point array. Default is 0.0. 
.IP "\fB\fIradius2\fP: \fP" 1c
The second radius (Y axis if rotation angle is 0) of search ellipse. Set this parameter to zero to use whole point array. Default is 0.0. 
.IP "\fB\fIangle\fP: \fP" 1c
Angle of search ellipse rotation in degrees (counter clockwise, default 0.0). 
.IP "\fB\fInodata\fP: \fP" 1c
NODATA marker to fill empty points (default 0.0). 
.PP
.PP
.PP
.SH "READING COMMA SEPARATED VALUES"
.PP
Often you have a text file with a list of comma separated XYZ values to work with (so called CSV file). You can easily use that kind of data source in \fBgdal_grid\fP. All you need is create a virtual dataset header (VRT) for you CSV file and use it as input datasource for \fBgdal_grid\fP. You can find details on VRT format at \fCVirtual Format\fP description page.
.PP
Here is a small example. Let we have a CSV file called \fIdem.csv\fP containing
.PP
.PP
.nf

Easting,Northing,Elevation
86943.4,891957,139.13
87124.3,892075,135.01
86962.4,892321,182.04
87077.6,891995,135.01
...
.fi
.PP
.PP
For above data we will create \fIdem.vrt\fP header with the following content:
.PP
.PP
.nf

<OGRVRTDataSource>
    <OGRVRTLayer name="dem">
        <SrcDataSource>dem.csv</SrcDataSource> 
	<GeometryType>wkbPoint</GeometryType> 
	<GeometryField encoding="PointFromColumns" x="Easting" y="Northing" z="Elevation"/> 
    </OGRVRTLayer>
</OGRVRTDataSource>
.fi
.PP
.PP
Now you can use \fIdem.vrt\fP with all OGR programs (start with \fBogrinfo\fP to test that everything works fine). The datasource will contain single layer called \fI'dem'\fP filled with point features constructed from values in CSV file. Using this technique you can handle CSV files with more than three columns, switch columns, etc.
.PP
If your CSV file does not contain column headers then it can be handled in the following way:
.PP
.PP
.nf

<GeometryField encoding="PointFromColumns" x="field_1" y="field_2" z="field_3"/>
.fi
.PP
.PP
\fCComma Separated Value\fP description page contains details on CSV format supported by GDAL/OGR.
.SH "EXAMPLE"
.PP
The following would create raster TIFF file from VRT datasource described in \fBREADING COMMA SEPARATED VALUES\fP section using the inverse distance to a power method.
.PP
.PP
.nf

gdal_grid -a invdist:power=2.0:smoothing=1.0 -txe 85000 89000 -tye 894000 890000 -outsize 400 400 -of GTiffG -ot Float64 -l dem dem.vrt dem.tiff
.fi
.PP
.SH "AUTHORS"
.PP
Andrey Kiselev <dron@ak4719.spb.edu> 
